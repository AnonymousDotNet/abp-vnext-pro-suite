using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using Volo.Abp.Domain.Entities.Auditing;

namespace {{ context.Project.NameSpace }}.{{ context.EntityModel.Code }}.Aggregate;

/// <summary>
    /// {{ context.EntityModel.Description }}
    /// </summary>
public class {{ context.EntityModel.Code }} : {% if context.EntityModel.IsRoot %}FullAuditedAggregateRoot<Guid> {% else %}FullAuditedEntity<Guid> {% endif %}
        {
        /// <summary>
            /// 私有化构造函数
            /// </summary>
        private {{ context.EntityModel.Code }}()
        {
        {% for prop in context.EntityModel.EntityModels %}{% if  prop.RelationalType == 20 %}

            {{ prop.Code }} = new List<{{ prop.Code }}>();
        {% endif %}{% endfor %}
        }
        /// <summary>
            /// 公有构造函数
            /// </summary>
        public {{ context.EntityModel.Code }}(
        Guid id
        {% for prop in context.EntityModel.Properties %}
            {% if  prop.IsEnum %}
                {{ prop.EnumType.Code }} {{ prop.Code }}
            {% else %}
                {{ prop.DataType.Code }} {{ prop.Code }}
            {% endif %}{% endfor %}

        ): base(id)
        {

        }

        {% for prop in context.EntityModel.Properties %}{% if  prop.IsEnum %}

            {% comment %} 循环实体属性 {% endcomment %}
            /// <summary>
                /// {{ prop.Description }}
                /// </summary>
            public {{ prop.EnumType.Code }} {{ prop.Code }} { get; private set; }{% else %}

            /// <summary>
                /// {{ prop.Description }}
                /// </summary>
            public {{ prop.DataType.Code }} {{ prop.Code }} { get; private set; }  {% endif %}{% endfor %}

        {% comment %} 循环子实体{% endcomment %}
        {% for prop in context.EntityModel.EntityModels %}{% if  prop.RelationalType == 10 %}
            /// <summary>
                /// {{ prop.Description }}
                /// </summary>
            public {{ prop.Code }} {{ prop.Code }}  { get; private set; } {% else %}
            /// <summary>
                /// {{ prop.Description }}
                /// </summary>
            public List<{{ prop.Code }}> {{ prop.Code }}  { get; private set; }{% endif %}
        {% endfor %}

        {% comment %} 给每个属性添加Set方法 {% endcomment %}
        {% for prop in context.EntityModel.Properties %}{% if  prop.IsEnum %}
            private void Set{{ prop.Code }} ({{ prop.EnumType.Code }} {{prop.Code}})
            {
            {{ prop.Code }} = {{ prop.Code }};
            }{% else %}
            private void Set{{ prop.Code }} ({{ prop.DataType.Code }} {{prop.Code}})
            {
            {{ prop.Code }} = {{ prop.Code }};
            } {% endif %}{% endfor %}
        }